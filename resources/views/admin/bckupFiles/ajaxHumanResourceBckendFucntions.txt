public function ajax(Request $request)
    {
        $columns = [
            'registration', 'passport_photo', 'id', 'name', 'email', 'cnic', 'application_date',
            'craft', 'sub_craft', 'approvals', 'approvals_document', 'son_of', 'mother_name', 'date_of_birth',
            'cnic_expiry_date', 'doi', 'doe', 'passport', 'next_of_kin', 'relation', 'kin_cnic', 'shoe_size',
            'cover_size', 'acdemic_qualification', 'technical_qualification', 'experience_local', 'experience_gulf',
            'district_of_domicile', 'present_address', 'present_address_phone', 'present_address_mobile',
            'permanent_address', 'present_address_city', 'permanent_address_phone', 'permanent_address_mobile',
            'gender', 'permanent_address_city', 'permanent_address_province', 'citizenship', 'refference',
            'performance_appraisal', 'min_salary', 'comment', 'status', 'id'
        ];

        // Always get the total count (without filters)
        $totalData = HumanResource::count();

        $query = HumanResource::with(['Crafts', 'SubCrafts', 'hrSteps']);

        // Filtering
        if (
            $request->filled('company_id') ||
            $request->filled('project_id') ||
            $request->filled('demand_id')
        ) {
            $query->whereHas('nominates', function ($q) use ($request) {
                if ($request->filled('project_id')) {
                    $q->where('project_id', $request->project_id);
                }
                if ($request->filled('demand_id')) {
                    $q->where('demand_id', $request->demand_id);
                }
                if ($request->filled('company_id')) {
                    $q->whereHas('project', function ($subQ) use ($request) {
                        $subQ->where('company_id', $request->company_id);
                    });
                }
            });
        }

        if (
            $request->filled('medically_fit') ||
            $request->filled('visa_expiry')
        ) {
            $query->whereHas('hrSteps', function ($q) use ($request) {
                if ($request->filled('medically_fit')) {
                    $q->where('step_number', 6)->where('medically_fit', $request->medically_fit);
                }
                if ($request->filled('visa_expiry')) {
                    $value = $request->input('passport_expiry');
                    if ($value == 'Valid') {
                        $q->where('step_number', 6)->whereDate('visa_expiry_date', '>=', now());
                    } elseif ($value == 'Expired') {
                        $q->where('step_number', 6)->whereDate('visa_expiry_date', '<', now());
                    }
                }
            });
        }

        if ($request->filled('cnic_expiry')) {
            $value = $request->input('cnic_expiry');
            if ($value == 'Valid') {
                $query->whereDate('cnic_expiry_date', '>=', now());
            } elseif ($value == 'Expired') {
                $query->whereDate('cnic_expiry_date', '<', now());
            }
        }

        if ($request->filled('passport_expiry')) {
            $value = $request->input('passport_expiry');
            if ($value == 'Valid') {
                $query->whereDate('doe', '>=', now());
            } elseif ($value == 'Expired') {
                $query->whereDate('doe', '<', now());
            }
        }

        // Searching
        $search = $request->input('search.value');
        if ($search) {
            $query->where(function ($q) use ($search) {
                $q->where('name', 'like', "%{$search}%")
                  ->orWhere('email', 'like', "%{$search}%")
                  ->orWhere('cnic', 'like', "%{$search}%");
            });
        }

        // Get filtered count before pagination
        $filteredQuery = clone $query;
        $totalFiltered = $filteredQuery->count();

        // Ordering
        $orderColIndex = $request->input('order.0.column', 0);
        $orderCol = $columns[$orderColIndex] ?? 'id';
        $orderDir = $request->input('order.0.dir', 'asc');
        if (in_array($orderCol, ['name', 'registration', 'email', 'cnic'])) {
            $query->orderBy($orderCol, $orderDir);
        } else {
            $query->latest();
        }

        // Pagination
        $start = $request->input('start', 0);
        $length = $request->input('length', 10);
        if ($length != -1) {
            $query->skip($start)->take($length);
        }

        $data = $query->get();

        // Format data for DataTables (plain data, no HTML)
        $result = [];
        foreach ($data as $row) {
            $step4 = $row->hrSteps->firstWhere('step_number', 4);
            $result[] = [
                'registration' => $row->registration ?? '',
                'passport_photo' => $step4 ? $step4->file_name : '',
                'id' => $row->id,
                'name' => $row->name ?? '',
                'email' => $row->email ?? '',
                'cnic' => $row->cnic ?? '',
                'application_date' => $row->application_date ?? '',
                'craft' => $row->Crafts->name ?? '',
                'sub_craft' => $row->SubCrafts->name ?? '',
                'approvals' => $row->approvals ?? '',
                'approvals_document' => $row->medical_doc ?? '',
                'son_of' => $row->son_of ?? '',
                'mother_name' => $row->mother_name ?? '',
                'date_of_birth' => $row->date_of_birth ?? '',
                'cnic_expiry_date' => $row->cnic_expiry_date ?? '',
                'doi' => $row->doi ?? '',
                'doe' => $row->doe ?? '',
                'passport' => $row->passport ?? '',
                'next_of_kin' => $row->next_of_kin ?? '',
                'relation' => $row->relation ?? '',
                'kin_cnic' => $row->kin_cnic ?? '',
                'shoe_size' => $row->shoe_size ?? '',
                'cover_size' => $row->cover_size ?? '',
                'acdemic_qualification' => $row->acdemic_qualification ?? '',
                'technical_qualification' => $row->technical_qualification ?? '',
                'experience_local' => $row->experience_local ?? '',
                'experience_gulf' => $row->experience_gulf ?? '',
                'district_of_domicile' => $row->district_of_domicile ?? '',
                'present_address' => $row->present_address ?? '',
                'present_address_phone' => $row->present_address_phone ?? '',
                'present_address_mobile' => $row->present_address_mobile ?? '',
                'permanent_address' => $row->permanent_address ?? '',
                'present_address_city' => $row->present_address_city ?? '',
                'permanent_address_phone' => $row->permanent_address_phone ?? '',
                'permanent_address_mobile' => $row->permanent_address_mobile ?? '',
                'gender' => $row->gender ?? '',
                'permanent_address_city' => $row->permanent_address_city ?? '',
                'permanent_address_province' => $row->permanent_address_province ?? '',
                'citizenship' => $row->citizenship ?? '',
                'refference' => $row->refference ?? '',
                'performance_appraisal' => $row->performance_appraisal ?? '',
                'min_salary' => $row->min_salary ?? '',
                'comment' => $row->comment ?? '',
                'status' => $row->status ?? '',
            ];
        }

        return response()->json([
            'draw' => intval($request->input('draw')),
            'recordsTotal' => $totalData,
            'recordsFiltered' => $totalFiltered,
            'data' => $result,
        ]);
    }
    public function index(Request $request)
        {
            // Only load dropdown/filter data and count, not all records
            $companies = Company::where('is_active', '=', '1')->orderBy('name', 'asc')->get();
            $projects = Project::where('is_active', '=', '1')->orderBy('project_name', 'asc')->get();
            $demands = Demand::where('project_id', $request->project_id)->where('is_active', '=', '1')->orderBy('manpower', 'asc')->get();
            $demands->transform(function ($demand) {
                $demand->full_name = $demand->manpower . ' - ' . $demand->craft?->name;
                return $demand;
            });


            $count = HumanResource::whereIn('status', [1, 3, 2, 0])->count();
            $HumanResources = HumanResource::with(['Crafts', 'SubCrafts', 'hrSteps'])
                        ->orderByRaw("FIELD(status, 1, 3, 2, 0)")
                        ->latest()
                        ->get();
            $medically_fit = $request->input('medically_fit') ? $request->input('medically_fit') : null;
            return view('admin.humanresouce.index', compact(
                'companies',
                'HumanResources',
                'projects',
                'demands',
                'count',
                'medically_fit'
            ));
        }